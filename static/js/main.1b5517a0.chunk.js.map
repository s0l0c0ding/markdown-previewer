{"version":3,"sources":["redux/actions.js","redux/mdPreviewRducer.js","redux/store.js","components/Preview.js","App.js","reportWebVitals.js","index.js"],"names":["PREVIEW","DEFAULT_TEXT","marked","setOptions","renderer","Renderer","breaks","initialState","editor","preview","store","createStore","state","action","type","payload","TextArea","Input","styCenter","pop","content","trigger","shape","icon","BulbOutlined","Preview","justify","span","title","bordered","headStyle","extra","id","onChange","event","props","previwAction","target","value","this","autoSize","dangerouslySetInnerHTML","__html","React","Component","mapDispatchToProps","data","connect","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAaA,EAAU,UCGjBC,EAAe,+rBAErBC,IAAOC,WAAW,CACdC,SAAU,IAAIF,IAAOG,SACrBC,QAAQ,IAEZ,IAAMC,EAAe,CACjBC,OAAQP,EACRQ,QAASP,IAAOD,ICRb,IAAMS,EAAQC,aDUN,WAAyD,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAE/D,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CACHQ,OAAQK,EAAOE,QACfN,QAASP,IAAOW,EAAOE,UAG/B,QACI,OAAOH,M,oFEjBfI,E,OAAaC,EAAbD,SAEFE,EAAY,CACd,aAAc,UAEZC,EACJ,cAAC,IAAD,CAASC,QAAS,yEAClBC,QAAQ,QADR,SAEK,cAAC,IAAD,CAAQC,MAAM,SAASC,KAAO,cAACC,EAAA,EAAD,QAG/BC,E,uKACO,IAAD,OACJ,OACI,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACA,cAAC,IAAD,CAAMC,MAAM,WAAWC,UAAU,EAAMC,UAAWZ,EAAWa,MAAQZ,EAArE,SACA,cAACH,EAAD,CAAUgB,GAAG,SACbC,SAAY,SAACC,GAAD,OAAW,EAAKC,MAAMC,aAAaF,EAAMG,OAAOC,QAC5DA,MAAQC,KAAKJ,MAAM3B,OACnBgC,UAAQ,QAIR,cAAC,IAAD,CAAKb,KAAM,GAAX,SACA,cAAC,IAAD,CAAMC,MAAM,OAAOC,UAAU,EAAMC,UAAWZ,EAA9C,SACA,qBAAMc,GAAG,UAAUS,wBAA0B,CAACC,OAAQH,KAAKJ,MAAM1B,sB,GAf3DkC,IAAMC,WA2BtBC,EAAqB,CACvBT,aH3CwB,SAACU,GACzB,MAAO,CACHhC,KAAMd,EACNe,QAAS+B,KG2CFC,eARU,SAACnC,GACtB,OAAOA,IAO4BiC,EAAxBE,CAA4CtB,G,OCjC5CuB,MAVf,WACE,OACE,cAAC,IAAD,CAAUtC,MAASA,EAAnB,SACA,qBAAKuC,UAAU,MAAf,SACA,cAAC,EAAD,SCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b5517a0.chunk.js","sourcesContent":["export const PREVIEW = 'PREVIEW';\n\nexport const previwAction = (data) => {\n    return {\n        type: PREVIEW,\n        payload: data\n    }\n}","import marked from 'marked';\nimport {PREVIEW} from './actions';\n\nconst DEFAULT_TEXT = \"# Welcome \\n\\n## This Markdown Previewer is built with [react](https://reactjs.org), [redux](https://redux.js.org) and [marked](https://marked.js.org/).\\n\\n## Code\\nHere is some code, `<div></div>`.\\n```\\n// this is multi-line code:\\nfunction anotherExample(firstLine, lastLine) {\\nif (firstLine == '```' && lastLine == '```') {\\nreturn multiLineCode;}}\\n```\\n## Blockquotes\\n> Blockquotes are very handy in email to emulate reply text.> This line is part of the same quote.\\n## Lists\\n1. First ordered list item\\n2. Another item\\n\\n## Images\\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png 'Logo Title Text 1')\\n\\n## Bold\\nYou can write text in **bold**.\"\n\nmarked.setOptions({\n    renderer: new marked.Renderer(),\n    breaks: true,\n});\nconst initialState = {\n    editor: DEFAULT_TEXT,\n    preview: marked(DEFAULT_TEXT)\n}\nexport default function mdPreviewReducer(state = initialState, action) {\n\n        switch (action.type) {\n            case PREVIEW:\n                return {\n                    editor: action.payload,\n                    preview: marked(action.payload)\n                };\n        \n            default:\n                return state;\n        }\n}","import { createStore } from 'redux';\nimport mdPreviewReducer from './mdPreviewRducer'\n\nexport const store = createStore(mdPreviewReducer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {previwAction} from '../redux/actions';\nimport { Row, Col, Card, Popover,Button } from 'antd';\nimport {BulbOutlined} from '@ant-design/icons';\nimport { Input } from 'antd';\nconst { TextArea } = Input;\n\nconst styCenter = {\n    'text-align': 'center'\n}\nconst pop = (\n  <Popover content={'Just paste the markdown code to be converted in html in the right side'} \n  trigger=\"click\">\n       <Button shape=\"circle\" icon= {<BulbOutlined/>}/>\n  </Popover>\n)\nclass Preview extends React.Component{\n    render(){\n        return (\n            <Row justify='center'>\n                <Col span={12}>\n                <Card title=\"Markdown\" bordered={true} headStyle={styCenter} extra= {pop}>\n                <TextArea id=\"editor\"\n                onChange = {(event) => this.props.previwAction(event.target.value)}\n                value= {this.props.editor}\n                autoSize\n                />\n                </Card>\n                </Col>\n                <Col span={12}>\n                <Card title=\"Html\" bordered={true} headStyle={styCenter}>\n                <div  id=\"preview\" dangerouslySetInnerHTML= {{__html: this.props.preview}}/>\n                </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nconst mapStateToProps =  (state) => {\n    return state;\n}\n\nconst mapDispatchToProps = {\n    previwAction\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Preview);","import { Provider } from 'react-redux';\nimport {store} from './redux/store';\nimport Preview from './components/Preview';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n    <div className=\"App\">\n    <Preview />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}